include: "rules/common.smk"

localrules: count_nucl_kmers, generate_snakemake_dag

####### Target rules #######
rule all:
    input:
        # Workflow DAG
        "snakemake_dag.png",

        # Individual nucl kmer counts for each genome
        expand(
            "results/feature_engineering/kmer_counts/{nucl_kmer_length}mers/{genome_name}_{nucl_kmer_length}mers.txt", 
            nucl_kmer_length=NUCL_KMER_LENGTH,
            genome_name=GENOME_NAMES,
        ),

        # Find orfs for aa counting
        expand(
            "working/orfs/{genome_name}/{genome_name}.faa",
            genome_name=GENOME_NAMES
        ),

        # Get raw aa kmer counts
        expand(
            "results/feature_engineering/kmers/aa/{aa_kmer_length}mers/combined_prod.tsv",
            aa_kmer_length=AA_KMER_LENGTHS,
        ),

        # Transposed aa kmer counts
        expand(
            "results/feature_engineering/kmers/aa/aa_{aa_kmer_length}mers.tsv",
            aa_kmer_length=AA_KMER_LENGTHS
        ),

        # kmer count matrix for all genomes
        f"results/all_{NUCL_KMER_LENGTH}mer_counts.csv",

        # kmer distribution plots plots
        # expand(
        #     "results/plots/{nucl_kmer_length}_mer{trans}.png",
        #     nucl_kmer_length=NUCL_KMER_LENGTH,
        #     trans=["", "_logged"]
        # ),
        # "data/merged_data.csv",
        # "results/modeling/xgboost_gridsearch.pkl"

        f"working/all.fasta",

        # BLAST DB
        expand("outputs/db/sbfpDB.{db_type}", db_type=BLAST_DB_SUFFIXES),


####### Meta rules #######
rule generate_snakemake_dag:
    input:
    output:
        "snakemake_dag.png"
    log:
        err = "logs/snakemake_dag.err",
        out = "logs/snakemake_dag.out"
    shell:
        "snakemake --rulegraph | dot -Tpng > {output}"

rule clean_all:
    shell:
        """
        rm -rf logs/*
        rm -rf .snakemake/log/*
        """

####### Modules #######
include: "rules/feature_engineering.smk"
# include: "rules/eda.smk"
# include: "rules/modeling.smk"
include: "rules/phylogenetics.smk"


####### Cleanup #######
onsuccess:
    shell("rm -rf data/kmc_temp/*")
